"use strict";
function drawRoundedPolygon(x, y, radius, sides, corner, rotation = 0) {
  if (sides = Math.max(sides | 0, 3), corner <= 0)
    return this.drawRegularPolygon(x, y, radius, sides, rotation);
  const sideLength = radius * Math.sin(Math.PI / sides) - 1e-3;
  corner = Math.min(corner, sideLength);
  const startAngle = -1 * Math.PI / 2 + rotation, delta = Math.PI * 2 / sides, internalAngle = (sides - 2) * Math.PI / sides / 2;
  for (let i = 0; i < sides; i++) {
    const angle = i * delta + startAngle, x0 = x + radius * Math.cos(angle), y0 = y + radius * Math.sin(angle), a1 = angle + Math.PI + internalAngle, a2 = angle - Math.PI - internalAngle, x1 = x0 + corner * Math.cos(a1), y1 = y0 + corner * Math.sin(a1), x3 = x0 + corner * Math.cos(a2), y3 = y0 + corner * Math.sin(a2);
    i === 0 ? this.moveTo(x1, y1) : this.lineTo(x1, y1), this.quadraticCurveTo(x0, y0, x3, y3);
  }
  return this.closePath();
}
exports.drawRoundedPolygon = drawRoundedPolygon;
//# sourceMappingURL=drawRoundedPolygon.js.map
