import { Polygon, PI_2 } from "@pixi/core";
class Star extends Polygon {
  /**
   * @param x - Center X position of the star
   * @param y - Center Y position of the star
   * @param points - The number of points of the star, must be > 1
   * @param radius - The outer radius of the star
   * @param innerRadius - The inner radius between points, default half `radius`
   * @param rotation - The rotation of the star in radians, where 0 is vertical
   */
  constructor(x, y, points, radius, innerRadius, rotation = 0) {
    innerRadius = innerRadius || radius / 2;
    const startAngle = -1 * Math.PI / 2 + rotation, len = points * 2, delta = PI_2 / len, polygon = [];
    for (let i = 0; i < len; i++) {
      const r = i % 2 ? innerRadius : radius, angle = i * delta + startAngle;
      polygon.push(
        x + r * Math.cos(angle),
        y + r * Math.sin(angle)
      );
    }
    super(polygon);
  }
}
function drawStar(x, y, points, radius, innerRadius, rotation = 0) {
  return this.drawPolygon(new Star(x, y, points, radius, innerRadius, rotation));
}
export {
  drawStar
};
//# sourceMappingURL=drawStar.mjs.map
