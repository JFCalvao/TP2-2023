{"version":3,"file":"drawTorus.mjs","sources":["../src/drawTorus.ts"],"sourcesContent":["import type { Graphics } from '@pixi/graphics';\n\n/**\n * Draw a torus shape, like a donut. Can be used for something like a circle loader.\n *\n * _Note: Only available with **@pixi/graphics-extras**._\n * @method PIXI.Graphics#drawTorus\n * @param this\n * @param {number} x - X position\n * @param {number} y - Y position\n * @param {number} innerRadius - Inner circle radius\n * @param {number} outerRadius - Outer circle radius\n * @param {number} [startArc=0] - Where to begin sweep, in radians, 0.0 = to the right\n * @param {number} [endArc=Math.PI*2] - Where to end sweep, in radians\n * @returns {PIXI.Graphics} This Graphics object. Good for chaining method calls\n */\nexport function drawTorus(this: Graphics,\n    x: number,\n    y: number,\n    innerRadius: number,\n    outerRadius: number,\n    startArc = 0,\n    endArc: number = Math.PI * 2): Graphics\n{\n    if (Math.abs(endArc - startArc) >= Math.PI * 2)\n    {\n        return this\n            .drawCircle(x, y, outerRadius)\n            .beginHole()\n            .drawCircle(x, y, innerRadius)\n            .endHole();\n    }\n\n    this.finishPoly();\n    this\n        .arc(x, y, innerRadius, endArc, startArc, true)\n        .arc(x, y, outerRadius, startArc, endArc, false)\n        .finishPoly();\n\n    return this;\n}\n"],"names":[],"mappings":"AAgBgB,SAAA,UACZ,GACA,GACA,aACA,aACA,WAAW,GACX,SAAiB,KAAK,KAAK,GAC/B;AACQ,SAAA,KAAK,IAAI,SAAS,QAAQ,KAAK,KAAK,KAAK,IAElC,KACF,WAAW,GAAG,GAAG,WAAW,EAC5B,YACA,WAAW,GAAG,GAAG,WAAW,EAC5B,aAGT,KAAK,cACL,KACK,IAAI,GAAG,GAAG,aAAa,QAAQ,UAAU,EAAI,EAC7C,IAAI,GAAG,GAAG,aAAa,UAAU,QAAQ,EAAK,EAC9C,cAEE;AACX;"}